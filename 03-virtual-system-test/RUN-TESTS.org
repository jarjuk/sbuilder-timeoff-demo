* Actions to Run Virtual System Tests 			  :TOC_2_org:
- [[Extract API Traces Steps from Sh-archives in =stage= -Directory][Extract API Traces Steps from Sh-archives in =stage= -Directory]]
- [[Launch =test-runner.rb= for API Trace Steps in =virtual-system-test-input= -directory][Launch =test-runner.rb= for API Trace Steps in =virtual-system-test-input= -directory]]
- [[Version information][Version information]]

* Extract API Traces Steps from Sh-archives in =stage= -Directory

List self extracting archives in =../stage= directory


#+name: ls-stage
#+BEGIN_SRC sh :eval no-export :results output :exports both :dir .
ls ../stage/*.sh
#+END_SRC

and observe self extracting archive files with names corresponding
/Possibility/ operators used in /Formal Modeling/

#+RESULTS: ls-stage
: ../stage/arch_isCompanyRegisteredFails.sh
: ../stage/arch_isCompanyRegistered.sh

Extract test cases for interface =registerCompany(post)= into
directory =virtual-system-test-input= with the following command:

#+BEGIN_SRC sh :eval no-export :dir . :results output
# Cleanup previous tests
rm virtual-system-test-input/*
# first extract
../stage/arch_isCompanyRegisteredFails.sh \
        --dir virtual-system-test-input \
          interface '/registerCompany\\(post\\)'  2>&1
# second extract
../stage/arch_isCompanyRegistered.sh \
       --dir virtual-system-test-input \
        interface '/registerCompany\\(post\\)' 2>&1 
#+END_SRC

#+RESULTS:
#+begin_example

Self create by jj@horsti

.. Checking SHA1 of ../stage/arch_isCompanyRegisteredFails.sh
.. Archive SHA1 ok
.. interface step=, interface=/registerCompany\\(post\\)
Step 1 interface /registerCompany(post)

Self create by jj@horsti

.. Checking SHA1 of ../stage/arch_isCompanyRegistered.sh
.. Archive SHA1 ok
.. interface step=, interface=/registerCompany\\(post\\)
Step 1 interface /registerCompany(post)
001-01-inp-TimeoffRegisterCompany.426759921aa71f5075e6fa6e33e828cfef8762ab
001-01-inp-TimeoffRegisterCompany.d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
001-02-api-TimeoffRegisterCompany.426759921aa71f5075e6fa6e33e828cfef8762ab
001-02-api-TimeoffRegisterCompany.d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
001-03-ret-TimeoffRegisterCompany.426759921aa71f5075e6fa6e33e828cfef8762ab
001-03-ret-TimeoffRegisterCompany.d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
001-04-out-TimeoffRegisterCompany.426759921aa71f5075e6fa6e33e828cfef8762ab
001-04-out-TimeoffRegisterCompany.d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
#+end_example

After these commands the content of =virtual-system-test-input=
contains files:

#+BEGIN_SRC sh :eval no-export :results output :dir . :exports results
ls -t virtual-system-test-input
#+END_SRC

#+RESULTS:
: 001-01-inp-TimeoffRegisterCompany.d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
: 001-02-api-TimeoffRegisterCompany.d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
: 001-03-ret-TimeoffRegisterCompany.d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
: 001-04-out-TimeoffRegisterCompany.d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
: 001-01-inp-TimeoffRegisterCompany.426759921aa71f5075e6fa6e33e828cfef8762ab
: 001-02-api-TimeoffRegisterCompany.426759921aa71f5075e6fa6e33e828cfef8762ab
: 001-03-ret-TimeoffRegisterCompany.426759921aa71f5075e6fa6e33e828cfef8762ab
: 001-04-out-TimeoffRegisterCompany.426759921aa71f5075e6fa6e33e828cfef8762ab

with files name using format 'STEP-TYPE-INTERFACE.SHA1', where

- *STEP*: is three digits for API trace step 
- *TYPE*: is Api trace step
  - =01-inp= formal state before executing API trace STEP
  - =02-api= formal parameter values passed to INTERFACE
  - =03-ret= formal parameter return values for calling INTERFACE
  - =04-out= formal state after executing API trace STEP
- *INTERFACE*: name of interface called in API trace STEP
- *SHA1*: suffix is SHA1 of the archive from, which the file was
  extracted identifying virtual system test, of which API trace step
  is part of


* Launch =test-runner.rb= for API Trace Steps in =virtual-system-test-input= -directory

To launch [[http://rspec.info/][RSpec]] test runner to execute API trace step test cases in
directory =virtual-system-test-input= issue the command

#+name: run-rspec 
#+BEGIN_SRC sh :eval no-export :dir . :results output :exports both
bundle exec rspec spec/virtual-system-test/test-runner.rb 2>&1
#+END_SRC

and observe the output:

#+RESULTS: run-rspec
#+begin_example
------------------------------------------------------------------
Step 001 - interface TimeoffRegisterCompany SHA1=d6bb3494bdda70ae1ad54ebca1fc01ae890db84a
    Check beforeState
    Start application
.   Make API call
    Check API response
        Check API response - expect success
.   Stop application
    Check afterState
------------------------------------------------------------------
Step 001 - interface TimeoffRegisterCompany SHA1=426759921aa71f5075e6fa6e33e828cfef8762ab
    Check beforeState
    Start application
.   Make API call
    Check API response
        Check API response - expect failure
.   Stop application
    Check afterState


Finished in 13.14 seconds (files took 0.26002 seconds to load)
4 examples, 0 failures

#+end_example

Test runner groups files in directory =virtual-system-test-input= by
=SHA1=, =INTERFACE= and =STEP= and

- initializes and checks system state using API trace step before
  state
- calls API with parameter value corresponding the =INTERFACE= of the
  API trace step
- checks that API response corresponds to =INTERFACE= return values of
  the API trace step
- checks that system state, after the API call, matches after state of
  the API trace step


* Version information

 - Ruby language environment : src_sh[:noweb yes :eval no-export :results output ]{ruby --version} {{{results(=ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-linux]=)}}} 
 - Tester environment
   - =rspec= GEM src_sh[:noweb yes :results output :eval no-export ]{ bundle show | grep -e ' rspec ' - } {{{results(=  * rspec (3.7.0)=)}}}         
   - =sqlite3-ruby= GEM src_sh[:noweb yes :results output :eval no-export ]{ bundle show | grep -e ' sqlite3-ruby ' - } {{{results(=  * sqlite3-ruby (1.3.3)=)}}}         
   - =capybara= GEM src_sh[:noweb yes :results output :eval no-export ]{ bundle show | grep -e ' capybara ' - } {{{results(=  * capybara (2.17.0)=)}}}         
   - =selenium-webdriver= GEM src_sh[:noweb yes :results output :eval no-export ]{ bundle show | grep -e ' selenium-webdriver ' - } {{{results(=  * selenium-webdriver (3.8.0)=)}}}         
 - Sbuilder Tools Set
   - =tla-trace-arch= GEM create self extracting archive src_sh[:noweb yes :results output :eval no-export ]{ bundle show | grep 'tla-trace-arch '} {{{results(=  * tla-trace-arch (0.1.1)=)}}} 


* Fin								   :noexport:


** Node version 

#+name: node-version
#+BEGIN_SRC ruby :eval no
lts/boron
#+END_SRC


** node 

#+name: node
#+BEGIN_SRC sh :eval no
. $NVM_DIR/nvm.sh
export PATH=$(npm bin):$PATH
#+END_SRC


** nvm 

#+name: nvm
#+BEGIN_SRC sh :eval no
. $NVM_DIR/nvm.sh
#+END_SRC



** emascs-org Babel configs: working directory .. 		   :noexport:

#+PROPERTY: header-args:sh :dir timeoff
#+PROPERTY: header-args:js :dir timeoff
#+PROPERTY: header-args:ruby :dir timeoff
#+PROPERTY: header-args:elisp :dir timeoff


** Emacs variables


# Local Variables:
# org-confirm-babel-evaluate: nil
# End:


